[versions]
compileSdk = "34"
targetSdk = "34"
minSdk = "21"
reboundVersion = "0.3.8"
navVersion = "2.7.6"
retrofitVersion = "2.9.0"
roomVersion = "2.6.1"
composeVersion = "1.5.4"
exoplayerVersion = "2.19.1"
kotlinVersion = "1.9.21"
accompanistVersion = "0.32.0"
workManagerVersion = "2.9.0"

[libraries]
# mmkv
mmkv = "com.tencent:mmkv-static:1.2.15"
# glide
glide = "com.github.bumptech.glide:glide:4.16.0"
# gson
gson = "com.google.code.gson:gson:2.10.1"
# logger
logger = "com.orhanobut:logger:2.2.0"
# okhttp
okhttp = "com.squareup.okhttp3:okhttp:4.12.0"
# browser
browser = "androidx.browser:browser:1.7.0"
# datastore Preferences
datastorePreferences = "androidx.datastore:datastore-preferences:1.0.0"

# multidex
multidex = "androidx.multidex:multidex:2.0.1"
# collectionKtx
collectionKtx = "androidx.collection:collection-ktx:1.3.0"
# preference
preferenceKtx = "androidx.preference:preference-ktx:1.2.1"
# retrofit
rebound = { module = "com.facebook.rebound:rebound", version.ref = "reboundVersion" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion"}
# retrofitConverterGson
retrofitConverterGson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofitVersion"}

# appcompat
appcompat = "androidx.appcompat:appcompat:1.6.1"
# material
material = "com.google.android.material:material:1.11.0"
# constraintlayout
constraintlayout = "androidx.constraintlayout:constraintlayout:2.1.4"
# recyclerview
recyclerview = "androidx.recyclerview:recyclerview:1.3.2"
# swiperefreshlayout
swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
# cardview
cardview = "androidx.cardview:cardview:1.0.0"

# navigation
navigationFragmentKtx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navVersion"}
navigationUiKtx = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navVersion"}
navigationDynamicFeaturesFragment = { module = "androidx.navigation:navigation-dynamic-features-fragment", version.ref = "navVersion"}
androidTestNavigation = { module = "androidx.navigation:navigation-testing", version.ref = "navVersion"}

# navigation compose
composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "navVersion"}

# room
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "roomVersion"}
roomKtx = { module = "androidx.room:room-ktx", version.ref = "roomVersion"}
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion"}

# WorkManager
workManager = { module = "androidx.work:work-runtime-ktx", version.ref = "workManagerVersion"}

# core
coreKtx = "androidx.core:core-ktx:1.12.0"
# lifecycle
lifecycleLivedataKtx = "androidx.lifecycle:lifecycle-livedata-ktx:2.6.2"
lifecycleViewmodelKtx = "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2"
lifecycleRuntimeKtx = "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"
lifecycleExtensions = "androidx.lifecycle:lifecycle-extensions:2.2.0"
# activity
activityKtx = "androidx.activity:activity-ktx:1.8.2"
# fragment
fragmentKtx = "androidx.fragment:fragment-ktx:1.6.2"

# junit
testJunit = "junit:junit:4.13.2"
# test core
testCore = "androidx.test:core:1.5.0"
androidTestExtJunit = "androidx.test.ext:junit:1.1.5"
# espresso
androidTestEspressoCore = "androidx.test.espresso:espresso-core:3.5.1"
# mockito
androidTestMockitoCore = "org.mockito:mockito-core:5.7.0"
# robolectric
androidTestRobolectricCore = "org.robolectric:robolectric:4.11.1"
# google truth
androidTestGoogleTruthCore = "com.google.truth:truth:1.1.3"

# 协程
kotlinxCoroutinesCore = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version = "1.7.3" }
# 协程 - 安卓支持
kotlinxCoroutinesAndroid = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version = "1.7.3" }

# exoplayer
exoplayerCore = { group = "com.google.android.exoplayer", name = "exoplayer-core", version.ref = "exoplayerVersion" }
exoplayerDash = { group = "com.google.android.exoplayer", name = "exoplayer-dash", version.ref = "exoplayerVersion" }
exoplayerUi = { group = "com.google.android.exoplayer", name = "exoplayer-ui", version.ref = "exoplayerVersion" }
exoplayerHls = { group = "com.google.android.exoplayer", name = "exoplayer-hls", version.ref = "exoplayerVersion" }

# paging3
paging3 = { group = "androidx.paging", name = "paging-runtime-ktx", version = "3.2.1" }
# paging-compose
composePaging = { group = "androidx.paging", name = "paging-compose", version = "3.2.1" }

# google
googleGmsPlayServicesBase = "com.google.android.gms:play-services-base:18.2.0"
googleGmsPlayServicesAuth = 'com.google.android.gms:play-services-auth:20.7.0'
# analytics
googleGmsPlayServicesAanalytics = 'com.google.android.gms:play-services-analytics:18.0.4'
# gcm
googleGmsPlayServicesGcm = "com.google.android.gms:play-services-gcm:17.0.0"
# ads
googleGmsPlayServicesAds = "com.google.android.gms:play-services-ads:22.6.0"
# firebase
googleFirebaseCode = 'com.google.firebase:firebase-core:21.1.1'
googleFirebaseMessaging = "com.google.firebase:firebase-messaging:23.4.0"
googleFirebaseMessagingKtx = "com.google.firebase:firebase-messaging-ktx:23.4.0"

# 本地OCR識別的依賴
googleGmsPlayServicesMlkitTextRecognition = 'com.google.android.gms:play-services-mlkit-text-recognition:19.0.0'

# compose
composeUi = { module = "androidx.compose.ui:ui", version.ref = "composeVersion"}
composeMaterial = { module = "androidx.compose.material:material", version.ref = "composeVersion"}
composeMaterial3 = { module = "androidx.compose.material3:material3", version = "1.1.2"}
composeUiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeVersion"}
composeActivity = "androidx.activity:activity-compose:1.8.2"
androidTestComposeUiTestJunit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "composeVersion"}
debugComposeUiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeVersion"}
debugComposeUiTestManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "composeVersion"}
composeFoundationLlayout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "composeVersion"}

# compose lifecycle
composeLifecycleViewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version = "2.6.2" }

# compose livedata
composeRuntimeLivedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "composeVersion" }
# compose coil
composeCoil = { module = "io.coil-kt:coil-compose", version = "2.5.0" }

# solovyev checkout
solovyevCheckout = "org.solovyev.android:checkout:1.2.5"

[plugins]
androidApplication = { id = "com.android.application", version = "8.2.0" }
androidLibrary = { id = "com.android.library", version = "8.2.0" }
androidKotlin = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinVersion" }